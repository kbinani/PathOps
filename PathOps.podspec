third_party_source_files = ["PathOps/third_party/skia/src/opts/SkOpts_hsw.cpp", "PathOps/third_party/skia/src/core/SkStroke.cpp", "PathOps/third_party/skia/src/core/SkPoint.cpp", "PathOps/third_party/skia/src/core/SkMath.cpp", "PathOps/third_party/skia/src/ports/SkOSFile_stdio.cpp", "PathOps/third_party/skia/src/core/SkPathRef.cpp", "PathOps/third_party/skia/src/core/SkBuffer.cpp", "PathOps/third_party/skia/src/pathops/SkOpCubicHull.cpp", "PathOps/third_party/skia/src/pathops/SkPathWriter.cpp", "PathOps/third_party/skia/src/pathops/SkReduceOrder.cpp", "PathOps/third_party/skia/src/pathops/SkPathOpsOp.cpp", "PathOps/third_party/skia/src/opts/SkOpts_sse42.cpp", "PathOps/third_party/skia/src/pathops/SkDConicLineIntersection.cpp", "PathOps/third_party/skia/src/pathops/SkOpAngle.cpp", "PathOps/third_party/skia/src/ports/SkMemory_malloc.cpp", "PathOps/third_party/skia/src/opts/SkOpts_crc32.cpp", "PathOps/third_party/skia/src/pathops/SkOpBuilder.cpp", "PathOps/third_party/skia/src/core/SkStrokeRec.cpp", "PathOps/third_party/skia/src/pathops/SkDCubicLineIntersection.cpp", "PathOps/third_party/skia/src/core/SkString.cpp", "PathOps/third_party/skia/src/pathops/SkPathOpsQuad.cpp", "PathOps/third_party/skia/src/core/SkStrokerPriv.cpp", "PathOps/third_party/skia/src/core/SkSemaphore.cpp", "PathOps/third_party/skia/src/core/SkColor.cpp", "PathOps/third_party/skia/src/core/SkCpu.cpp", "PathOps/third_party/skia/src/core/SkPath.cpp", "PathOps/third_party/skia/src/core/SkOpts.cpp", "PathOps/third_party/skia/src/core/SkMatrix.cpp", "PathOps/third_party/skia/src/pathops/SkPathOpsSimplify.cpp", "PathOps/third_party/skia/src/pathops/SkPathOpsCommon.cpp", "PathOps/third_party/skia/src/pathops/SkIntersections.cpp", "PathOps/third_party/skia/src/pathops/SkPathOpsLine.cpp", "PathOps/third_party/skia/src/pathops/SkPathOpsRect.cpp", "PathOps/third_party/skia/src/pathops/SkOpContour.cpp", "PathOps/third_party/skia/src/pathops/SkPathOpsTSect.cpp", "PathOps/third_party/skia/src/pathops/SkAddIntersections.cpp", "PathOps/third_party/skia/src/pathops/SkOpSpan.cpp", "PathOps/third_party/skia/src/pathops/SkDLineIntersection.cpp", "PathOps/third_party/skia/src/pathops/SkPathOpsTightBounds.cpp", "PathOps/third_party/skia/src/pathops/SkPathOpsAsWinding.cpp", "PathOps/third_party/skia/src/core/SkGeometry.cpp", "PathOps/third_party/skia/src/pathops/SkPathOpsConic.cpp", "PathOps/third_party/skia/src/core/SkUtils.cpp", "PathOps/third_party/skia/src/pathops/SkOpEdgeBuilder.cpp", "PathOps/third_party/skia/src/pathops/SkPathOpsCubic.cpp", "PathOps/third_party/skia/src/pathops/SkPathOpsDebug.cpp", "PathOps/third_party/skia/src/pathops/SkOpSegment.cpp", "PathOps/third_party/skia/src/opts/SkOpts_sse41.cpp", "PathOps/third_party/skia/src/core/SkRRect.cpp", "PathOps/third_party/skia/src/pathops/SkDCubicToQuads.cpp", "PathOps/third_party/skia/src/pathops/SkDQuadLineIntersection.cpp", "PathOps/third_party/skia/src/pathops/SkOpCoincidence.cpp", "PathOps/third_party/skia/src/opts/SkOpts_avx.cpp", "PathOps/third_party/skia/src/ports/SkOSFile_posix.cpp", "PathOps/third_party/skia/src/core/SkThreadID.cpp", "PathOps/third_party/skia/src/core/SkRect.cpp", "PathOps/third_party/skia/src/core/SkStringUtils.cpp", "PathOps/third_party/skia/src/ports/SkDebug_stdio.cpp", "PathOps/third_party/skia/src/pathops/SkPathOpsCurve.cpp", "PathOps/third_party/skia/src/pathops/SkPathOpsWinding.cpp", "PathOps/third_party/skia/src/core/SkArenaAlloc.cpp", "PathOps/third_party/skia/src/pathops/SkPathOpsTypes.cpp", "PathOps/third_party/skia/src/core/SkCubicClipper.cpp", "PathOps/third_party/skia/src/utils/SkUTF.cpp"]

Pod::Spec.new do |spec|
  spec.name = "PathOps"
  spec.version = "0.0.1"
  spec.summary = "Boolean operation library for CGPath with skia https://skia.org/ backend."
  spec.description = <<-DESC
  Boolean operation library for CGPath with skia https://skia.org/ backend
                   DESC
  spec.homepage = "https://github.com/kbinani/PathOps"
  spec.license = "MIT"
  spec.author = { "kbinani" => "kbinani.bt@gmail.com" }

  spec.source = { :git => "https://github.com/kbinani/PathOps.git", :tag => "#{spec.version}" }
  spec.source_files = ["PathOps/*.{h,mm}", "PathOpsSwift/*.{h,swift}"] + third_party_source_files
  spec.pod_target_xcconfig = { 'HEADER_SEARCH_PATHS' => '$(PODS_TARGET_SRCROOT)/PathOps/third_party/skia $(PODS_TARGET_SRCROOT)/PathOps/third_party/skia/third_party/skcms $(PODS_TARGET_SRCROOT)/PathOps/third_party' }

  spec.frameworks = "Foundation", "CoreGraphics"
end
